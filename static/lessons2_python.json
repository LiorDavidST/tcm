{
  "lessons": [
    {
      "title": "Lesson 2: Conditions and Loops",
      "topics": [
        {
          "title": "If, Elif, Else Statements",
          "theory": "Conditional statements let you execute code only when certain conditions are met. You can use `if`, `elif`, and `else` to build logical branches in your code.\n\nExample:\nage = 20\nif age >= 18:\n    print(\"You are an adult\")\nelse:\n    print(\"You are underage\")",
          "exercise": "1. Write a program that checks whether a number is positive, negative, or zero.",
          "starter_code": "num = int(input(\"Enter a number: \"))\nif num > 0:\n    print(\"Positive\")\nelif num < 0:\n    print(\"Negative\")\nelse:\n    print(\"Zero\")"
        },
        {
          "title": "Comparison and Logical Operators",
          "theory": "Comparison operators (==, !=, <, >) compare values. Logical operators (and, or, not) combine conditions. They are used to write more complex conditions.\n\nExample:\ntemp = 25\nis_sunny = True\nif temp > 20 and is_sunny:\n    print(\"Great day for a walk!\")",
          "exercise": "1. Check if a student qualifies for a scholarship (age > 18 and average grade > 85).",
          "starter_code": "age = int(input(\"Enter your age: \"))\ngrade = float(input(\"Enter your average grade: \"))\nif age > 18 and grade > 85:\n    print(\"You qualify for a scholarship\")\nelse:\n    print(\"You do not qualify\")"
        },
        {
          "title": "Nested Conditions",
          "theory": "You can place one if statement inside another. This is useful when you need to check multiple layers of conditions.\n\nExample:\nscore = 90\nif score >= 60:\n    if score >= 85:\n        print(\"Excellent!\")\n    else:\n        print(\"Passed\")\nelse:\n    print(\"Failed\")",
          "exercise": "1. Write a program that checks if a number is divisible by both 3 and 5.",
          "starter_code": "num = int(input(\"Enter a number: \"))\nif num % 3 == 0 and num % 5 == 0:\n    print(\"Divisible by both 3 and 5\")\nelse:\n    print(\"Not divisible by both\")"
        },
        {
          "title": "While Loops",
          "theory": "`while` loops run as long as a condition is true. Use `break` to exit the loop and `continue` to skip to the next iteration.\n\nExample:\ncount = 0\nwhile count < 5:\n    print(\"Counting:\", count)\n    count += 1",
          "exercise": "1. Write a program that asks for a password until the user enters '1234'.",
          "starter_code": "password = ''\nwhile password != '1234':\n    password = input(\"Enter password: \")\nprint(\"Access granted\")"
        },
        {
          "title": "For Loops",
          "theory": "`for` loops are used to iterate over sequences like lists or ranges.\n\nExample:\nfor i in range(5):\n    print(\"Step:\", i)",
          "exercise": "1. Print all numbers from 1 to 10 using a for loop.",
          "starter_code": "for i in range(1, 11):\n    print(i)"
        },
        {
          "title": "Final Practice",
          "theory": "You've learned how to write conditions and loops. Now try combining them.",
          "subtopics": [
            {
              "title": "Practice 1: Simple Condition",
              "exercise": "Check if the number entered is even or odd.",
              "theory": "`if` statements let you run code only if a condition is true. Combine with input for user interaction.\n\nExample:\nnum = 5\nif num > 0:\n    print(\"Positive\")",
              "solution": "num = int(input(\"Enter a number: \"))\nif num % 2 == 0:\n    print(\"Even\")\nelse:\n    print(\"Odd\")"
            },
            {
              "title": "Practice 2: Nested If with Input",
              "exercise": "Ask for age and if over 18, ask for license status and print a message.",
              "theory": "`if` statements let you run code only if a condition is true. Combine with input for user interaction.\n\nExample:\nnum = 5\nif num > 0:\n    print(\"Positive\")",
              "solution": "age = int(input(\"Enter age: \"))\nif age >= 18:\n    has_license = input(\"Do you have a license? (yes/no): \")\n    if has_license == \"yes\":\n        print(\"You can drive\")\n    else:\n        print(\"You cannot drive\")\nelse:\n    print(\"Too young to drive\")"
            },
            {
              "title": "Practice 3: Loop with Counter",
              "exercise": "Print numbers from 10 down to 1 using while loop.",
              "theory": "A `while` loop runs as long as its condition is true. It's useful for countdowns or loops with uncertain length.\n\nExample:\ni = 5\nwhile i > 0:\n    print(i)\n    i -= 1",
              "solution": "i = 10\nwhile i > 0:\n    print(i)\n    i -= 1"
            },
            {
              "title": "Practice 4: For Loop and Condition",
              "exercise": "Use a for loop to print only even numbers from 1 to 20.",
              "theory": "`for` loops are used to go over ranges or lists. You can use conditions inside them too.\n\nExample:\nfor i in range(10):\n    if i % 2 == 0:\n        print(i)",
              "solution": "for i in range(1, 21):\n    if i % 2 == 0:\n        print(i)"
            }
          ]
        },
        {
          "title": "Loop Control – Break and Continue",
          "theory": "`break` stops a loop immediately. `continue` skips the current iteration and moves to the next.\n\nExample:\nfor i in range(5):\n    if i == 3:\n        break\n    print(i)  # Prints 0, 1, 2",
          "example": "for i in range(5):\n    if i == 3:\n        break\n    print(i)",
          "exercise": "1. Write a loop that prints numbers 1 to 10, but skips 5.",
          "starter_code": "for i in range(1, 11):\n    if i == 5:\n        continue\n    print(i)"
        },
        {
          "title": "Final Practice – Multi-Condition and Loops",
          "theory": "This challenge combines loops, conditions, and user input.\n\nExample:\nAsk the user to enter 5 numbers. After each entry, tell if the number is even or odd. Then calculate the total sum.",
          "subtopics": [
            {
              "title": "Practice 5: Multiple Inputs and Decision Making",
              "exercise": "Ask the user to enter 5 numbers. For each, print whether it's even or odd. Then print the total sum.",
              "theory": "You can use a `for` loop with `input()`, `if`, and arithmetic together. This is a powerful combination!",
              "solution": "num = int(input(\"Enter a number: \"))\nif num % 2 == 0:\n    print(\"Even\")\nelse:\n    print(\"Odd\")"
            }
          ]
        }
      ]
    }
  ]
}